"""
Django settings for CowTrack project.

Generated by 'django-admin startproject' using Django 3.0.11.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os
from pathlib import Path

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get('SECRET_KEY', 'hu1$-bj&8ftbz5w^2x5zo!qr_!0*(u^m(kh-3fi=bczsb$!(&t')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.environ.get('DEBUG', 'True') == 'True'

# 本番環境の検出（RailwayではPORT環境変数が設定される）
IS_PRODUCTION = 'PORT' in os.environ or os.environ.get('RAILWAY_ENVIRONMENT') == 'production'

# ALLOWED_HOSTS設定 - より確実な設定
ALLOWED_HOSTS = ['*']  # 一時的にすべてのホストを許可

# 開発環境の場合のみ制限
if DEBUG and not IS_PRODUCTION:
    ALLOWED_HOSTS = [
        'localhost',
        '127.0.0.1', 
        '192.168.2.102',
        '.ngrok.io',
        '.ngrok-free.app',
        '.loca.lt',
    ]

# Railway/本番環境のホスト設定
# if IS_PRODUCTION or not DEBUG:
#     ALLOWED_HOSTS.extend([
#         '.railway.app',
#         'web-production-fdf0d.up.railway.app',
#         '.render.com',
#         '.herokuapp.com',
#         '.pythonanywhere.com',
#         '*',  # 一時的にすべてのホストを許可
#     ])


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'cattle',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'CowTrack.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'CowTrack.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

# Railway用の設定（本番環境のみ）
if 'DATABASE_URL' in os.environ:
    try:
        import dj_database_url
        DATABASES = {
            'default': dj_database_url.parse(os.environ['DATABASE_URL'])
        }
    except ImportError:
        DATABASES = {
            'default': {
                'ENGINE': 'django.db.backends.sqlite3',
                'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
            }
        }
else:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
        }
    }

# 本番環境のホスト設定
# if not DEBUG:
#     ALLOWED_HOSTS = [
#         'localhost',
#         '127.0.0.1',
#         '.railway.app',
#         '.render.com',
#         '.herokuapp.com',
#         '.pythonanywhere.com',
#     ]


# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = '/static/'

# 静的ファイルの設定
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]

STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# カスタムユーザーモデルの指定
AUTH_USER_MODEL = 'cattle.User'

# デフォルトの主キーフィールドタイプ
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# CSRF設定（ngrok対応）
CSRF_TRUSTED_ORIGINS = [
    'https://*.ngrok-free.app',
    'https://*.ngrok.io',
    'https://*.loca.lt',
    'https://*.railway.app',
]

# 本番環境でのセキュリティ設定
if IS_PRODUCTION or not DEBUG:
    CSRF_COOKIE_SECURE = True
    SESSION_COOKIE_SECURE = True
    SECURE_SSL_REDIRECT = True
    SECURE_HSTS_SECONDS = 31536000
    SECURE_HSTS_INCLUDE_SUBDOMAINS = True
    SECURE_HSTS_PRELOAD = True
else:
    # 開発環境でのCSRF検証を緩和
    CSRF_COOKIE_SECURE = False
    SESSION_COOKIE_SECURE = False

# Railway用の環境変数設定
if IS_PRODUCTION:
    # Railwayの環境変数を設定
    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'CowTrack.settings')
    os.environ.setdefault('DEBUG', 'False')
    print(f"Production environment detected. DEBUG={DEBUG}, IS_PRODUCTION={IS_PRODUCTION}")
    print(f"ALLOWED_HOSTS={ALLOWED_HOSTS}")
else:
    print(f"Development environment. DEBUG={DEBUG}, IS_PRODUCTION={IS_PRODUCTION}")
    print(f"ALLOWED_HOSTS={ALLOWED_HOSTS}")
